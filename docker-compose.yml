version: '3.9'

volumes:
  postgres_data: null
  mysql_data: null
  maria_data: null
  ssl_certs: null

networks:
  crud_network:
    driver: bridge

services:
  # Postgres Database Service
  postgres:
#    image: postgres:14.5-alpine
    build:
      context: .
      dockerfile: .devcontainer/postgres/Dockerfile
    restart: on-failure
    hostname: example.com
    environment:
        POSTGRES_DB: ${POSTGRES_DB}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_SSLMODE: require
        POSTGRES_SSLROOTCERT: /etc/ssl/certs/server.crt
        POSTGRES_SSLKEY: /etc/ssl/certs/server.key
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ssl_certs:/etc/ssl/certs # Mount certificates
    ports:
      - "5432:5432"
    networks:
      - crud_network
    command:
      - "postgres"
      - "-c"
      - "ssl=on"
      - "-c"
      - "ssl_cert_file=/etc/ssl/certs/server.crt"
      - "-c"
      - "ssl_key_file=/etc/ssl/certs/server.key"

  mysql:
#    image: mysql:8.0
    build:
      context: .
      dockerfile: .devcontainer/mysql/Dockerfile
    restart: on-failure
#    env_file:
#      - .env.mysql
    environment:
        MYSQL_DATABASE: ${MYSQL_DATABASE}
        MYSQL_USER: ${MYSQL_USER}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    expose:
      - "3306"
    ports:
      - "3306:3306"
    networks:
      - crud_network


  maria:
#    image: mariadb:10.6
    build:
      context: .
      dockerfile: .devcontainer/mariadb/Dockerfile
    restart: on-failure
#    env_file:
#      - .env.maria
    environment:
      MARIADB_DATABASE: ${MARIADB_DATABASE}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
    volumes:
      - maria_data:/var/lib/mysql
    expose:
        - "3306"
    ports:
      - "3307:3306"
    networks:
      - crud_network

#   DBMS Service (Adminer)
  adminer:
#    image: adminer
    build:
      context: .
      dockerfile: .devcontainer/adminer/Dockerfile
    restart: always
    expose:
      - "8080"
    ports:
      - "8080:8080"
    networks:
      - crud_network

