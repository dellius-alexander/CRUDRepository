name: Build test and deploy to package repository
env:
  TZ: 'America/New_York'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
  TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9",  "3.10" ]
    steps:
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          poetry install

  test:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.8", "3.9",  "3.10" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Docker Compose services
        run: docker-compose up -d

      - name: Build and test
        run: poetry run pytest

  deploy:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9",  "3.10" ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Upload build artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: actions/upload-artifact@v2
        with:
          name: Build-Results
          path: |
            dist
            crud_repository.egg-info
            README.md
            LICENSE

#      - name: Publish to PyPI
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
#          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
#        run: |
#          poetry publish --build -u $TWINE_USERNAME -p $TWINE_PASSWORD
